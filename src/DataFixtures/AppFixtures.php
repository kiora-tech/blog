<?php

namespace App\DataFixtures;

use App\Entity\Article;
use Doctrine\Bundle\FixturesBundle\Fixture;
use Doctrine\Persistence\ObjectManager;
use Faker\Factory;

class AppFixtures extends Fixture
{
    public function load(ObjectManager $manager)
    {
        $faker = Factory::create();
        for ($i = 0; $i < 10; $i++) {
            $article = new Article();
            $article->setContent('{"ops":[{"insert":"Why"},{"attributes":{"header":2},"insert":"\n"},{"insert":"A bundle is similar to a plugin in other software, but even better\nWe have to create a bundle in two use cases:\nTo share symfony code"},{"attributes":{"list":"bullet"},"insert":"\n"},{"insert":"To encapsulate a library"},{"attributes":{"list":"bullet"},"insert":"\n"},{"insert":"You can see many examples to share code:\nsymfony/maker-bundle"},{"attributes":{"list":"bullet"},"insert":"\n"},{"insert":"symfony/framework-bundle"},{"attributes":{"list":"bullet"},"insert":"\n"},{"insert":"And to encapsulating a library:\nsymfony/twig-bundle"},{"attributes":{"list":"bullet"},"insert":"\n"},{"insert":"symfony/swiftmailer-bundle"},{"attributes":{"list":"bullet"},"insert":"\n"},{"insert":"\nHow"},{"attributes":{"header":2},"insert":"\n"},{"insert":"Create your bundle project\nmkdir foo-bundle"},{"attributes":{"code-block":true},"insert":"\n"},{"insert":"cd foo-bundle"},{"attributes":{"code-block":true},"insert":"\n"},{"insert":"Initialize your bundle\ncomposer init"},{"attributes":{"code-block":true},"insert":"\n"},{"insert":"composer req symfony/http-kernel"},{"attributes":{"code-block":true},"insert":"\n"},{"insert":"git init"},{"attributes":{"code-block":true},"insert":"\n"},{"insert":"The only required file for a bundle is XXXBundle.php.\nThis file will be loaded by the symfony kernel.\nBy convention the bundle name is CompanyComposantBundle.php (cf: symfony bundle)\ntouch KioraFooBunlde.php"},{"attributes":{"code-block":true},"insert":"\n"},{"insert":"Edit the file KioralFooBundle.php\n<?php"},{"attributes":{"code-block":true},"insert":"\n"},{"insert":"namespace Kiora\\FooBundle;"},{"attributes":{"code-block":true},"insert":"\n\n"},{"insert":"use Symfony\\Component\\HttpKernel\\Bundle\\Bundle;"},{"attributes":{"code-block":true},"insert":"\n\n"},{"insert":"class KioralFooBundle extends Bundle"},{"attributes":{"code-block":true},"insert":"\n"},{"insert":"{"},{"attributes":{"code-block":true},"insert":"\n"},{"insert":"}"},{"attributes":{"code-block":true},"insert":"\n"},{"insert":"Edit the file composer.json\n{"},{"attributes":{"code-block":true},"insert":"\n"},{"insert":" \"name\": \"kiora/foo-bundle\","},{"attributes":{"code-block":true},"insert":"\n"},{"insert":" \"description\": \"A bundle\","},{"attributes":{"code-block":true},"insert":"\n"},{"insert":" \"type\": \"library\","},{"attributes":{"code-block":true},"insert":"\n"},{"insert":" \"autoload\": {"},{"attributes":{"code-block":true},"insert":"\n"},{"insert":" \"psr-4\": {"},{"attributes":{"code-block":true},"insert":"\n"},{"insert":" \"Kiora\\\\FooBundle\\\\\": \"\""},{"attributes":{"code-block":true},"insert":"\n"},{"insert":" }"},{"attributes":{"code-block":true},"insert":"\n"},{"insert":" },"},{"attributes":{"code-block":true},"insert":"\n"},{"insert":" \"require\": {"},{"attributes":{"code-block":true},"insert":"\n"},{"insert":" \"symfony/http-kernel\": \"^4.3|^5.0\","},{"attributes":{"code-block":true},"insert":"\n"},{"insert":" }"},{"attributes":{"code-block":true},"insert":"\n"},{"insert":"}"},{"attributes":{"code-block":true},"insert":"\n"},{"insert":"Great , you just created your first minimal bundle. But a bundle must do something.\nCreate a glue Bundle\nImagine that you have a custom library and you want to simplify its usage inside symfony projects.\ncomposer req symfony/dependency-injection"},{"attributes":{"code-block":true},"insert":"\n"},{"insert":"composer req symfony/config"},{"attributes":{"code-block":true},"insert":"\n"},{"insert":"composer req your/library"},{"attributes":{"code-block":true},"insert":"\n"},{"insert":"mkdir -p Resources/config"},{"attributes":{"code-block":true},"insert":"\n"},{"insert":"mkdir DependencyInjection"},{"attributes":{"code-block":true},"insert":"\n\n"},{"insert":"touch DependencyInjection/Configuration.php"},{"attributes":{"code-block":true},"insert":"\n"},{"insert":"touch DependencyInjection/KioraFooExtension.php"},{"attributes":{"code-block":true},"insert":"\n"},{"insert":"touch Resources/config/services.xml"},{"attributes":{"code-block":true},"insert":"\n"},{"insert":"Yes, just three new files\nThe file Configuration.php defines the configuration tree for your bundle.\nThe file KioraFooExtension.php will load the DI configuration (services, parameters, ..) of your bundle.\nThe file services.xml defines the definitions of your services.\nThe extension file must by named like the bundle XXXBundle â†’ XXXExtension to be loaded automatically\nEdit the file Configuration.php\n<?php"},{"attributes":{"code-block":true},"insert":"\n\n"},{"insert":"namespace Kiora\\FooBundle\\DependencyInjection;"},{"attributes":{"code-block":true},"insert":"\n\n"},{"insert":"use Symfony\\Component\\Config\\Definition\\Builder\\TreeBuilder;"},{"attributes":{"code-block":true},"insert":"\n"},{"insert":"use Symfony\\Component\\Config\\Definition\\ConfigurationInterface;"},{"attributes":{"code-block":true},"insert":"\n\n"},{"insert":"class Configuration implements ConfigurationInterface"},{"attributes":{"code-block":true},"insert":"\n"},{"insert":"{"},{"attributes":{"code-block":true},"insert":"\n"},{"insert":" public function getConfigTreeBuilder()"},{"attributes":{"code-block":true},"insert":"\n"},{"insert":" {"},{"attributes":{"code-block":true},"insert":"\n"},{"insert":" $treeBuilder = new TreeBuilder(\'kiora_kiora\');"},{"attributes":{"code-block":true},"insert":"\n\n"},{"insert":" $treeBuilder->getRootNode()"},{"attributes":{"code-block":true},"insert":"\n"},{"insert":" ->children()"},{"attributes":{"code-block":true},"insert":"\n"},{"insert":" ->scalarNode(\'username\')"},{"attributes":{"code-block":true},"insert":"\n"},{"insert":" ->isRequired()"},{"attributes":{"code-block":true},"insert":"\n"},{"insert":" ->cannotBeEmpty()"},{"attributes":{"code-block":true},"insert":"\n"},{"insert":" ->end()"},{"attributes":{"code-block":true},"insert":"\n"},{"insert":" ->scalarNode(\'password\')"},{"attributes":{"code-block":true},"insert":"\n"},{"insert":" ->isRequired()"},{"attributes":{"code-block":true},"insert":"\n"},{"insert":" ->cannotBeEmpty()"},{"attributes":{"code-block":true},"insert":"\n"},{"insert":" ->end()"},{"attributes":{"code-block":true},"insert":"\n"},{"insert":" ->end();"},{"attributes":{"code-block":true},"insert":"\n\n"},{"insert":" return $treeBuilder;"},{"attributes":{"code-block":true},"insert":"\n"},{"insert":" }"},{"attributes":{"code-block":true},"insert":"\n"},{"insert":"}"},{"attributes":{"code-block":true},"insert":"\n"},{"insert":"Edit the file KioraFooExtension.php\n<?php"},{"attributes":{"code-block":true},"insert":"\n\n"},{"insert":"namespace Kiora\\FoolBundle\\DependencyInjection;"},{"attributes":{"code-block":true},"insert":"\n\n"},{"insert":"use Symfony\\Component\\Config\\Definition\\Processor;"},{"attributes":{"code-block":true},"insert":"\n"},{"insert":"use Symfony\\Component\\DependencyInjection\\ContainerBuilder;"},{"attributes":{"code-block":true},"insert":"\n"},{"insert":"use Symfony\\Component\\Config\\FileLocator;"},{"attributes":{"code-block":true},"insert":"\n"},{"insert":"use Symfony\\Component\\DependencyInjection\\Loader\\XmlFileLoader;"},{"attributes":{"code-block":true},"insert":"\n"},{"insert":"use Symfony\\Component\\HttpKernel\\DependencyInjection\\Extension;"},{"attributes":{"code-block":true},"insert":"\n\n"},{"insert":"class KioraFooExtension extends Extension"},{"attributes":{"code-block":true},"insert":"\n"},{"insert":"{"},{"attributes":{"code-block":true},"insert":"\n"},{"insert":" public function load(array $configs, ContainerBuilder $container)"},{"attributes":{"code-block":true},"insert":"\n"},{"insert":" {"},{"attributes":{"code-block":true},"insert":"\n"},{"insert":" $loader = new XmlFileLoader($container, new FileLocator(__DIR__.\'/../Resources/config\'));"},{"attributes":{"code-block":true},"insert":"\n"},{"insert":" $loader->load(\'services.xml\');"},{"attributes":{"code-block":true},"insert":"\n\n"},{"insert":" $configuration = new Configuration();"},{"attributes":{"code-block":true},"insert":"\n"},{"insert":" $processor = new Processor();"},{"attributes":{"code-block":true},"insert":"\n"},{"insert":" $config = $processor->processConfiguration($configuration, $configs);"},{"attributes":{"code-block":true},"insert":"\n\n"},{"insert":" $container->setParameter(\'kiora.username\', $config[\'username\']);"},{"attributes":{"code-block":true},"insert":"\n"},{"insert":" $container->setParameter(\'kiora.password\', $config[\'password\']);"},{"attributes":{"code-block":true},"insert":"\n\n"},{"insert":" }"},{"attributes":{"code-block":true},"insert":"\n"},{"insert":"}"},{"attributes":{"code-block":true},"insert":"\n"},{"insert":"Edit the file services.xml\n<?xml version=\"1.0\" ?>"},{"attributes":{"code-block":true},"insert":"\n"},{"insert":" <container xmlns=\"http://symfony.com/schema/dic/services\""},{"attributes":{"code-block":true},"insert":"\n"},{"insert":" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\""},{"attributes":{"code-block":true},"insert":"\n"},{"insert":" xsi:schemaLocation=\"http://symfony.com/schema/dic/services http://symfony.com/schema/dic/services/services-1.0.xsd\">"},{"attributes":{"code-block":true},"insert":"\n"},{"insert":" <services>"},{"attributes":{"code-block":true},"insert":"\n"},{"insert":" <service id=\"your.libraray\" class=\"Your\\Library\" public=\"true\">"},{"attributes":{"code-block":true},"insert":"\n"},{"insert":" <argument>%kiora.username%</argument>"},{"attributes":{"code-block":true},"insert":"\n"},{"insert":" <argument>%kiora.password%</argument>"},{"attributes":{"code-block":true},"insert":"\n"},{"insert":" </service>"},{"attributes":{"code-block":true},"insert":"\n"},{"insert":" <service id=\"Your\\Library\" alias=\"your.libraray\" />"},{"attributes":{"code-block":true},"insert":"\n"},{"insert":" </services>"},{"attributes":{"code-block":true},"insert":"\n"},{"insert":" </container>"},{"attributes":{"code-block":true},"insert":"\n"},{"insert":"Tips and tricks"},{"attributes":{"header":2},"insert":"\n"},{"insert":"Start with an empty bundle, publish it and register it on "},{"attributes":{"color":"#212529","link":"https://packagist.org/"},"insert":"https://packagist.org/"},{"insert":" (or other)\nBefore doing so, you can edit your bundle directly in the vendor folder. With this method you can test your bundle.\nIf you don\'t want to publish it before you finish, you can install it locally\n//composer.json"},{"attributes":{"code-block":true},"insert":"\n"},{"insert":"{"},{"attributes":{"code-block":true},"insert":"\n"},{"insert":"//..."},{"attributes":{"code-block":true},"insert":"\n"},{"insert":" \"repositories\": ["},{"attributes":{"code-block":true},"insert":"\n"},{"insert":" {"},{"attributes":{"code-block":true},"insert":"\n"},{"insert":" \"type\": \"vcs\","},{"attributes":{"code-block":true},"insert":"\n"},{"insert":" \"url\": \"../foo-bundle\""},{"attributes":{"code-block":true},"insert":"\n"},{"insert":" }"},{"attributes":{"code-block":true},"insert":"\n"},{"insert":" ],"},{"attributes":{"code-block":true},"insert":"\n"},{"insert":"//..."},{"attributes":{"code-block":true},"insert":"\n"},{"insert":"}"},{"attributes":{"code-block":true},"insert":"\n"},{"insert":"composer req kiora/foo-bundle dev-master"},{"attributes":{"code-block":true},"insert":"\n"},{"insert":"\n"}]}')
                ->setTitle($faker->text(20))
                ->setCreatedAt($faker->dateTimeBetween())
                ->setSummarize($faker->text(30));
            $manager->persist($article);

        }
        $manager->flush();

    }
}
